{"version":3,"file":"js/app.js","mappings":"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","sources":["webpack://quantox-internship2021-group4-addressbook/./src/app/App.css?2ae4","webpack://quantox-internship2021-group4-addressbook/./src/app/App.js","webpack://quantox-internship2021-group4-addressbook/./src/app/components/ActionBar.js","webpack://quantox-internship2021-group4-addressbook/./src/app/components/Button.js","webpack://quantox-internship2021-group4-addressbook/./src/app/components/ConfirmModal.js","webpack://quantox-internship2021-group4-addressbook/./src/app/components/DeleteButton.js","webpack://quantox-internship2021-group4-addressbook/./src/app/components/EntryEditor.js","webpack://quantox-internship2021-group4-addressbook/./src/app/components/EntryEditorControls.js","webpack://quantox-internship2021-group4-addressbook/./src/app/components/Input.js","webpack://quantox-internship2021-group4-addressbook/./src/app/components/Modal.js","webpack://quantox-internship2021-group4-addressbook/./src/app/components/Settings.js","webpack://quantox-internship2021-group4-addressbook/./src/app/components/Table.js","webpack://quantox-internship2021-group4-addressbook/./src/app/components/TableBody.js","webpack://quantox-internship2021-group4-addressbook/./src/app/components/TableHeader.js","webpack://quantox-internship2021-group4-addressbook/./src/app/hooks/useFetch.js","webpack://quantox-internship2021-group4-addressbook/./src/app/hooks/useModalHook.js","webpack://quantox-internship2021-group4-addressbook/./src/app/index.js","webpack://quantox-internship2021-group4-addressbook/./src/server/routes/Routes.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};\n    if(module.hot) {\n      // 1692033412322\n      var cssReload = require(\"/workspaces/addressbook/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  ","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport { API_GET_ENTRIES_ROUTE } from \"../server/routes/Routes\";\nimport Table from \"./components/Table\";\nimport DeleteButton from \"./components/DeleteButton\";\nimport ActionBar from \"./components/ActionBar\";\nimport i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport detector from \"i18next-browser-languagedetector\";\nimport translationsEn from \"./translations/en.json\";\nimport translationsSr from \"./translations/sr.json\";\nimport { useFetchGet, GET_RESPONSE_DATA_JSON } from \"./hooks/useFetch\";\nimport EntryEditor from \"./components/EntryEditor\";\nimport useModalHook from \"./hooks/useModalHook\";\nimport { useTranslation } from \"react-i18next\";\n\ni18n.use(initReactI18next) // passes i18n down to react-i18next\n    .use(detector)\n    .init({\n        resources: {\n            en: { translation: translationsEn },\n            sr: { translation: translationsSr },\n        },\n        fallbackLng: \"en\",\n        interpolation: { escapeValue: false },\n    });\n\nconst tableHeaderAllScreensClassName =\n    \"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider hidden md:table-cell\";\nconst tableCellAllScreensClassName =\n    \"px-4 py-3 flex-wrap hidden md:table-cell text-left text-base\";\nconst tableHeaderLargeScreenClassName =\n    \"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider hidden xl:table-cell\";\nconst tableCellLargeScreenClassName =\n    \"px-4 py-3 flex-wrap hidden xl:table-cell text-left text-base\";\nconst tableHeaderMediumScreenClassName =\n    \"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider hidden lg:table-cell\";\nconst tableCellMediumScreenClassName =\n    \"px-4 py-3 flex-wrap hidden lg:table-cell text-left text-base\";\n\nconst App = () => {\n    const { t } = useTranslation();\n\n    //modal implementation\n\n    const { openModal } = useModalHook();\n\n    const {\n        data: items,\n        error,\n        fetch: fetchItems,\n    } = useFetchGet(API_GET_ENTRIES_ROUTE, GET_RESPONSE_DATA_JSON);\n\n    const refreshTable = () => {\n        fetchItems();\n    };\n\n    useEffect(() => {\n        fetchItems();\n    }, [fetchItems]);\n\n    if (error) {\n        return <div>Error: {error.message}</div>;\n    }\n\n    const columns = [\n        {\n            label: \"avatar\",\n            renderCell: (item) => {\n                return (\n                    <img\n                        className={\n                            \"inline object-cover w-12 h-12 mr-2 rounded-full\"\n                        }\n                        src={item.avatarUrl}\n                        alt=\"avatar\"\n                    />\n                );\n            },\n            headerClassName: tableHeaderAllScreensClassName,\n            bodyClassName: tableCellAllScreensClassName,\n        },\n        {\n            label: \"firstName\",\n            renderCell: (item) => {\n                return (\n                    <span\n                        className=\"cursor-pointer hover:underline hover:text-gray-500\"\n                        onClick={() =>\n                            openModal(\n                                t(\"Edit\") + \" \" + item.firstName,\n                                <EntryEditor\n                                    readOnly={true}\n                                    entry={item}\n                                    refreshTable={refreshTable}\n                                />\n                            )\n                        }\n                    >\n                        {item.firstName}\n                    </span>\n                );\n            },\n            headerClassName: tableHeaderAllScreensClassName,\n            bodyClassName: tableCellAllScreensClassName,\n        },\n        {\n            label: \"lastName\",\n            renderCell: (item) => {\n                return <span>{item.lastName}</span>;\n            },\n            headerClassName: tableHeaderAllScreensClassName,\n            bodyClassName: tableCellAllScreensClassName,\n        },\n        {\n            label: \"country\",\n            renderCell: (item) => {\n                return <span>{item.country}</span>;\n            },\n            headerClassName: tableHeaderMediumScreenClassName,\n            bodyClassName: tableCellMediumScreenClassName,\n        },\n        {\n            label: \"city\",\n            renderCell: (item) => {\n                return <span>{item.city}</span>;\n            },\n            headerClassName: tableHeaderAllScreensClassName,\n            bodyClassName: tableCellAllScreensClassName,\n        },\n        {\n            label: \"street\",\n            renderCell: (item) => {\n                return <span>{item.street}</span>;\n            },\n            headerClassName: tableHeaderLargeScreenClassName,\n            bodyClassName: tableCellLargeScreenClassName,\n        },\n        {\n            label: \"postalCode\",\n            renderCell: (item) => {\n                return <span>{item.postalCode}</span>;\n            },\n            headerClassName: tableHeaderLargeScreenClassName,\n            bodyClassName: tableCellLargeScreenClassName,\n        },\n        {\n            label: \"birthDate\",\n            renderCell: (item) => {\n                return <span>{item.birthDate}</span>;\n            },\n            headerClassName: tableHeaderLargeScreenClassName,\n            bodyClassName: tableCellLargeScreenClassName,\n        },\n        {\n            label: \"email\",\n            renderCell: (item) => {\n                return <span>{item.email}</span>;\n            },\n            headerClassName: tableHeaderMediumScreenClassName,\n            bodyClassName: tableCellMediumScreenClassName,\n        },\n        {\n            label: \"delete\",\n            renderCell: (item) => {\n                return (\n                    <DeleteButton uuid={item.uuid} onDelete={refreshTable} />\n                );\n            },\n            headerClassName: tableHeaderAllScreensClassName,\n            bodyClassName: tableCellAllScreensClassName,\n        },\n        {\n            label: \"mobile\",\n            renderCell: (item) => {\n                return (\n                    <div className=\"flex flex-col items-center border-black  shadow-xl rounded-md px-4 py-3 text-base\">\n                        <div className=\"flex flex-col items-center pb-3\">\n                            <div>\n                                <img\n                                    src={item.avatarUrl}\n                                    alt=\"avatar\"\n                                    className={\"h-[100px] rounded-full\"}\n                                />\n                            </div>\n                            <p\n                                className=\"cursor-pointer hover:underline hover:text-gray-500\"\n                                onClick={() =>\n                                    openModal(\n                                        t(\"Add new Entry\"),\n                                        <EntryEditor\n                                            readOnly={true}\n                                            entry={item}\n                                            refreshTable={refreshTable}\n                                        />\n                                    )\n                                }\n                            >\n                                <span className=\"font-bold uppercase \">\n                                    {t(\"firstName\")}:\n                                </span>{\" \"}\n                                {item.firstName}\n                            </p>\n                            <p>\n                                <span className=\"font-bold uppercase\">\n                                    {t(\"lastName\")}:\n                                </span>{\" \"}\n                                {item.lastName}\n                            </p>\n                            <p>\n                                <span className=\"font-bold uppercase\">\n                                    {t(\"city\")}:\n                                </span>{\" \"}\n                                {item.city}\n                            </p>\n                        </div>\n                        <DeleteButton\n                            uuid={item.uuid}\n                            onDelete={refreshTable}\n                        />\n                    </div>\n                );\n            },\n\n            headerClassName: \"hidden\",\n            bodyClassName: \"px-6 py-4 flex-wrap table-cell md:hidden\",\n        },\n    ];\n\n    return (\n        <div>\n            <ActionBar fetchItems={fetchItems} refreshTable={refreshTable} />\n            {items && <Table columns={columns} items={items} />}\n        </div>\n    );\n};\n\nexport default App;\n","import React, { useState, useContext } from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport { PlusIcon, CogIcon, SearchIcon } from \"@heroicons/react/outline\";\nimport { ModalContext } from \"./Modal\";\nimport Settings from \"./Settings\";\nimport { useTranslation } from \"react-i18next\";\nimport EntryEditor from \"./EntryEditor\";\nimport debounce from \"lodash.debounce\";\nimport Input from \"./Input\";\nimport Button from \"./Button\";\n\nconst ActionBar = ({ fetchItems, refreshTable }) => {\n    const { t } = useTranslation();\n    const { openModal } = useContext(ModalContext);\n\n    return (\n        <nav className=\"sticky w-full top-0 py-6 bg-white shadow-lg rounded-b-xl px-6 flex justify-between items-center\">\n            <Button\n                intent={\"success\"}\n                onClick={() =>\n                    openModal(\n                        t(\"Add new Entry\"),\n                        <EntryEditor refreshTable={refreshTable} />\n                    )\n                }\n                className=\"w-fit px-4 bg-gray-400 rounded-bl-lg py-3 shadow-md text-white hover:bg-gray-500 flex items-center justify-center\"\n            >\n                <PlusIcon className=\"w-[20px]\" />\n                <span className=\"hidden md:inline-block ml-1\">{t(\"Add\")}</span>\n            </Button>\n            <div className=\"container flex items-center justify-center mx-5\">\n                <SearchIcon className=\"w-[20px] mr-1\" />\n\n                <Input\n                    onChange={debounce((e) => {\n                        fetchItems(`?search=${e.target.value}`);\n                    }, 350)}\n                    type=\"text\"\n                    className=\"w-full\"\n                    placeholder={t(\"Search\")}\n                />\n            </div>\n            <Button\n                intent={\"info\"}\n                onClick={() => openModal(t(\"settings\"), <Settings />)}\n                className=\"w-fit px-4 bg-white rounded-br-lg py-3 shadow-md hover:bg-gray-100 flex items-center justify-center\"\n            >\n                <CogIcon className=\"w-[20px]\" />\n                <span className=\"hidden md:inline-block ml-1\">\n                    {t(\"settings\")}\n                </span>\n            </Button>\n        </nav>\n    );\n};\n\nActionBar.propTypes = {\n    searchTerm: PropTypes.func,\n    refreshTable: PropTypes.func,\n};\n\nexport default ActionBar;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\n\n/**\n * @typedef {object} Props\n * @property {\"button\" | \"submit\"} [type=\"button\"] - Button type.\n * @property {boolean} [disabled=false] - Whether the button is disabled.\n * @property {React.ReactNode} [label] - Button label.\n * @property {string} [className] - Additional classes to pass onto button.\n * @property {React.ReactNode} [children] - Button children.\n * @property {...any} [props] - Rest of the props.\n */\n\n/**\n * Simple button.\n *\n * @type {React.FC<Props>}\n *\n */\n\nconst Button = ({\n    intent = \" \",\n    type = \"button\",\n    disabled = false,\n    label,\n    className,\n    children,\n    ...props\n}) => {\n    const getColor = () => {\n        switch (intent) {\n            case \"info\":\n                return [\n                    \"border-blue-600\",\n                    \"hover:border-blue-400\",\n                    \"hover:bg-blue-400\",\n                    \"ring-blue-400\",\n                    \"active:bg-blue-600\",\n                    \"text-white\",\n                    \"bg-blue-600\",\n                    \"focus:ring-blue-500\",\n                    \"active:translate-y-0.5\",\n                ];\n\n            case \"warning\":\n                return [\n                    \"border-orange-500\",\n                    \"hover:border-orange-300\",\n                    \"bg-orange-500\",\n                    \"hover:bg-orange-300\",\n                    \"ring-orange-200\",\n                    \"active:bg-orange-500\",\n                    \"text-white\",\n                    \"focus:ring-orange-500\",\n                    \"active:translate-y-0.5\",\n                ];\n            case \"danger\":\n                return [\n                    \"border-red-500\",\n                    \"hover:border-red-300\",\n                    \"hover:bg-red-300\",\n                    \"ring-red-200\",\n                    \"active:bg-red-500\",\n                    \"text-white\",\n                    \"bg-red-500\",\n                    \"focus-ring-red-500\",\n                    \"active:translate-y-0.5\",\n                ];\n            case \"success\":\n                return [\n                    \"border-green-600\",\n                    \"hover:border-green-400\",\n                    \"hover:bg-green-400\",\n                    \"ring-green-200\",\n                    \"active:bg-green-600\",\n                    \"text-white\",\n                    \"bg-green-600\",\n                    \"active:translate-y-0.5\",\n                ];\n            case \"default\":\n            default:\n                return [\n                    \"border-gray-500\",\n                    \"hover:border-gray-900\",\n                    \"hover:bg-gray-100\",\n                    \"ring-gray-200\",\n                    \"active:bg-gray-600\",\n                    \"ring-offset-0\",\n                    \"focus:outline-none\",\n                    \"focus:ring-2\",\n                    \"active:translate-y-0.5\",\n                ];\n        }\n    };\n    return (\n        <button\n            intent={intent}\n            type={type}\n            disabled={disabled}\n            className={clsx(\n                \"px-[1rem]\",\n                \"py-[0.5rem]\",\n                \"border\",\n                \"rounded-[4px]\",\n\n                className,\n                getColor()\n            )}\n            {...props}\n        >\n            {children || label}\n        </button>\n    );\n};\n\nButton.propTypes = {\n    type: PropTypes.oneOf([\"button\", \"submit\"]),\n    intent: PropTypes.oneOf([\n        \"warning\",\n        \"info\",\n        \"success\",\n        \"danger\",\n        \"default\",\n    ]),\n    disabled: PropTypes.bool,\n    label: PropTypes.node,\n    className: PropTypes.string,\n    children: PropTypes.node,\n    openModal: PropTypes.func,\n};\n\nButton.displayName = \"Button\";\n\nexport default Button;\n","import React from \"react\";\nimport { ModalContext } from \"./Modal\";\nimport { useContext } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport Button from \"./Button\";\n\nexport const CONFIRM_MODAL_YES = \"yes\";\nexport const CONFIRM_MODAL_NO = \"no\";\n\nconst ConfirmModal = () => {\n    const { t } = useTranslation();\n    const { closeModal } = useContext(ModalContext);\n\n    const handleCloseModalYes = () => {\n        return closeModal(CONFIRM_MODAL_YES);\n    };\n    const handleCloseModalNo = () => {\n        return closeModal(CONFIRM_MODAL_NO);\n    };\n\n    return (\n        <div className=\"flex justify-end text-black w-100 py-2 px-4 text-left rounded mt-4\">\n            <Button\n                onClick={handleCloseModalYes}\n                intent=\"success\"\n                className=\"mr-4 text-base font-medium\"\n            >\n                {t(\"yes\")}\n            </Button>\n            <Button\n                onClick={handleCloseModalNo}\n                intent=\"danger\"\n                className=\"text-base font-medium\"\n            >\n                {t(\"no\")}\n            </Button>\n        </div>\n    );\n};\n\nexport const CONFIRM_MODAL_ID = <ConfirmModal />;\n","import React, { useContext } from \"react\";\nimport Button from \"./Button\";\nimport { TrashIcon } from \"@heroicons/react/solid\";\nimport { API_DELETE_ENTRY_ROUTE } from \"../../server/routes/Routes\";\nimport { ModalContext } from \"./Modal\";\nimport { useFetchDelete } from \"../hooks/useFetch\";\nimport { useTranslation } from \"react-i18next\";\nimport { CONFIRM_MODAL_YES } from \"./ConfirmModal\";\nimport clsx from \"clsx\";\n\n// eslint-disable-next-line react/prop-types\nconst DeleteButton = ({ uuid, onDelete }) => {\n    const { openConfirmModal } = useContext(ModalContext);\n    const { t } = useTranslation();\n    const openDeleteModal = () => {\n        openConfirmModal(t(\"title\")).then((resolveValue) => {\n            if (CONFIRM_MODAL_YES === resolveValue) {\n                deleteUser();\n            }\n        });\n    };\n\n    // eslint-disable-next-line no-unused-vars\n    const { response, error, fetch } = useFetchDelete(\n        API_DELETE_ENTRY_ROUTE.replace(\":uuid\", uuid)\n    );\n\n    const deleteUser = async () => {\n        await fetch();\n        onDelete(uuid);\n        if (error) {\n            console.error();\n        }\n    };\n    return (\n        <Button\n            intent=\"danger\"\n            className={clsx(\"rounded-br-md rounded-bl-md\")}\n            onClick={openDeleteModal}\n        >\n            <TrashIcon className=\" w-5 h-5  text-black-500\" />\n        </Button>\n    );\n};\n\nexport default DeleteButton;\n","import React, { useEffect } from \"react\";\nimport React, { useState, useContext } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { XIcon } from \"@heroicons/react/outline\";\nimport {\n    API_POST_V2_ENTRY_ROUTE,\n    API_PUT_V2_ENTRY_ROUTE,\n    API_GET_ENTRIES_ROUTE,\n} from \"../../server/routes/Routes\";\nimport { useFetchPut, useFetchPost } from \"../hooks/useFetch\";\nimport PropTypes from \"prop-types\";\nimport EntryEditorControls from \"./EntryEditorControls\";\nimport { ModalContext } from \"./Modal\";\nimport { useTranslation } from \"react-i18next\";\nimport Input from \"./Input\";\nimport defaultAvatar from \"../../../resources/images/DefaultAvatar.jpg\";\n// import defaultAvatar from \"../../../resources/images/DefaultAvatar.jpg\"\n\nconst EntryEditor = ({ resolve, reject, readOnly, entry, refreshTable }) => {\n    const {\n        register,\n        formState: { errors },\n        setValue,\n        getValues,\n        trigger,\n    } = useForm();\n    if (!entry) entry = {};\n    const [isDisabled, setIsDisabled] = useState(readOnly ?? false);\n    const { closeModal } = useContext(ModalContext);\n    const { t } = useTranslation();\n\n    /*------------------Setting the values------------------*/\n\n    useEffect(() => {\n        setValue(\"firstName\", entry.firstName ?? \"\");\n        setValue(\"lastName\", entry.lastName ?? \"\");\n        setValue(\"country\", entry.country ?? \"\");\n        setValue(\"city\", entry.city ?? \"\");\n        setValue(\"street\", entry.street ?? \"\");\n        setValue(\"postalCode\", entry.postalCode ?? \"\");\n        setValue(\n            \"birthDate\",\n            entry.birthDate ? entry.birthDate.replace(\"Z\", \"\") : \"\"\n        );\n        setValue(\"email\", entry.email ?? \"\");\n    }, []);\n\n    /*------------------Formdata------------------*/\n\n    const formData = new FormData();\n\n    const prepareData = () => {\n        console.log(getValues());\n        const file = DataURIToBlob(defaultAvatar);\n        function DataURIToBlob(dataURI) {\n            const splitDataURI = dataURI.split(\",\");\n            const byteString =\n                splitDataURI[0].indexOf(\"base64\") >= 0\n                    ? atob(splitDataURI[1])\n                    : decodeURI(splitDataURI[1]);\n            const mimeString = splitDataURI[0].split(\":\")[1].split(\";\")[0];\n\n            const ia = new Uint8Array(byteString.length);\n            for (let i = 0; i < byteString.length; i++)\n                ia[i] = byteString.charCodeAt(i);\n\n            return new Blob([ia], { type: mimeString });\n        }\n        var avatarFile = document.querySelector('input[type=\"file\"]').files[0];\n\n        if (avatarFile) {\n            formData.append(\"avatar\", avatarFile);\n        } else if (entry.avatarUrl) {\n            formData.append(\"avatarUrl\", entry.avatarUrl);\n        } else {\n            formData.append(\"avatar\", file, \"defaultAvatar.jpg\");\n        }\n        formData.append(\n            \"postalCode\",\n            getValues(\"postalCode\") ? getValues(\"postalCode\") : \"\"\n        );\n        formData.append(\"firstName\", getValues(\"firstName\"));\n        formData.append(\"lastName\", getValues(\"lastName\"));\n        formData.append(\"country\", getValues(\"country\"));\n        formData.append(\"city\", getValues(\"city\"));\n        formData.append(\"street\", getValues(\"street\"));\n        formData.append(\"birthDate\", getValues(\"birthDate\"));\n        formData.append(\"email\", getValues(\"email\"));\n    };\n\n    /*------------------UseFetch Hook Implemetation------------------*/\n\n    //Post\n    const { fetch: fetchPost } = useFetchPost(API_POST_V2_ENTRY_ROUTE, {\n        body: formData,\n    });\n\n    async function postData() {\n        prepareData();\n        await fetchPost();\n        refreshTable();\n        closeModal();\n    }\n\n    //Put\n    const { fetch: fetchPut } = useFetchPut(\n        API_PUT_V2_ENTRY_ROUTE.replace(\":uuid\", entry.uuid),\n        { body: formData }\n    );\n\n    async function putData() {\n        prepareData();\n        await fetchPut();\n        refreshTable();\n        closeModal();\n    }\n\n    /*------------------Handlers------------------*/\n    function onAdd() {\n        trigger().then((value) => {\n            if (value) postData();\n        });\n    }\n\n    function onSave() {\n        trigger().then((value) => {\n            if (value) putData();\n        });\n    }\n\n    return (\n        <form className=\"text-xs flex flex-col lg:text-md lg:grid lg:grid-cols-2 gap-7 mx-4 my-3\">\n            {isDisabled ? (\n                <div className=\"col-span-1 lg:col-span-2 flex justify-center\">\n                    <img\n                        className=\"w-[150px] lg:w-[300px]\"\n                        src={entry.avatarUrl}\n                    ></img>\n                </div>\n            ) : (\n                <div className=\"col-span-1 lg:col-span-2\">\n                    <label className=\"font-bold uppercase mr-4\" htmlFor=\"\">\n                        {t(\"avatar\")}:\n                    </label>\n                    <input\n                        type=\"file\"\n                        disabled={isDisabled}\n                        {...register(\"avatar\")}\n                        placeholder=\"\"\n                    />\n                </div>\n            )}\n            <div>\n                <label className=\"font-bold uppercase mr-4\" htmlFor=\"\">\n                    {t(\"firstName\")}:\n                </label>\n                <Input\n                    type=\"text\"\n                    disabled={isDisabled}\n                    {...register(\"firstName\", {\n                        required: t(\"This field can't be empty\"),\n                    })}\n                    placeholder=\"\"\n                />\n                <p className=\"text-red-500\">{errors.firstName?.message}</p>\n            </div>\n            <div>\n                <label className=\"font-bold uppercase mr-4\" htmlFor=\"\">\n                    {t(\"lastName\")}:\n                </label>\n                <Input\n                    type=\"text\"\n                    disabled={isDisabled}\n                    {...register(\"lastName\", {\n                        required: t(\"This field can't be empty\"),\n                    })}\n                    placeholder=\"\"\n                />\n                <p className=\"text-red-500\">{errors.lastName?.message}</p>\n            </div>\n            <div>\n                <label className=\"font-bold uppercase mr-4\" htmlFor=\"\">\n                    {t(\"country\")}:\n                </label>\n                <Input\n                    type=\"text\"\n                    disabled={isDisabled}\n                    {...register(\"country\", {\n                        required: t(\"This field can't be empty\"),\n                    })}\n                    placeholder=\"\"\n                />\n                <p className=\"text-red-500\">{errors.country?.message}</p>\n            </div>\n            <div>\n                <label className=\"font-bold uppercase mr-4\" htmlFor=\"\">\n                    {t(\"city\")}:\n                </label>\n                <Input\n                    type=\"text\"\n                    disabled={isDisabled}\n                    {...register(\"city\", {\n                        required: t(\"This field can't be empty\"),\n                    })}\n                    placeholder=\"\"\n                />\n                <p className=\"text-red-500\">{errors.city?.message}</p>\n            </div>\n            <div>\n                <label className=\"font-bold uppercase mr-4\" htmlFor=\"\">\n                    {t(\"street\")}:\n                </label>\n                <Input\n                    type=\"text\"\n                    disabled={isDisabled}\n                    {...register(\"street\", {\n                        required: t(\"This field can't be empty\"),\n                    })}\n                    placeholder=\"\"\n                />\n                <p className=\"text-red-500\">{errors.street?.message}</p>\n            </div>\n            <div>\n                <label className=\"font-bold uppercase mr-4\" htmlFor=\"\">\n                    {t(\"postalCode\")}:\n                </label>\n                <Input\n                    type=\"number\"\n                    disabled={isDisabled}\n                    {...register(\"postalCode\")}\n                    placeholder=\"\"\n                />\n            </div>\n            <div>\n                <label className=\"font-bold uppercase mr-4\" htmlFor=\"\">\n                    {t(\"birthDate\")}:\n                </label>\n                <Input\n                    className=\"w-[145px] lg:w-fit\"\n                    type=\"datetime-local\"\n                    disabled={isDisabled}\n                    {...register(\"birthDate\", {\n                        required: t(\"This field can't be empty\"),\n                    })}\n                    placeholder=\"\"\n                />\n                <p className=\"text-red-500\">{errors.birthDate?.message}</p>\n            </div>\n            <div>\n                <label className=\"font-bold uppercase mr-4\" htmlFor=\"\">\n                    {t(\"email\")}:\n                </label>\n                <Input\n                    type=\"text\"\n                    disabled={isDisabled}\n                    {...register(\"email\", {\n                        required: t(\"This field can't be empty\"),\n                    })}\n                    placeholder=\"\"\n                />\n                <p className=\"text-red-500\">{errors.email?.message}</p>\n            </div>\n            <div className=\"lg:col-span-2 w-full flex justify-center items-center\">\n                <EntryEditorControls\n                    onSave={onSave}\n                    onAdd={onAdd}\n                    setIsDisabled={setIsDisabled}\n                    isDisabled={isDisabled}\n                    entry={entry}\n                />\n            </div>\n        </form>\n    );\n};\n\nEntryEditor.propTypes = {\n    resolve: PropTypes.func,\n    reject: PropTypes.func,\n    readOnly: PropTypes.bool,\n    entry: PropTypes.object,\n    refreshTable: PropTypes.func,\n};\n\nexport default EntryEditor;\n","import React, { useState } from \"react\";\nimport Button from \"./Button\";\nimport { useTranslation } from \"react-i18next\";\n\nconst EntryEditorControls = ({\n    onSave,\n    onAdd,\n    setIsDisabled,\n    isDisabled,\n    entry,\n}) => {\n    const { t } = useTranslation();\n\n    if (Object.keys(entry).length === 0)\n        return (\n            <Button\n                intent={\"success\"}\n                onClick={() => onAdd()}\n                className=\"mt-5 w-[80%]\"\n            >\n                {t(\"Add\")}\n            </Button>\n        );\n    else if (isDisabled) {\n        return (\n            <Button\n                intent={\"info\"}\n                onClick={() => {\n                    setIsDisabled(false);\n                }}\n                className=\"mt-5 w-[80%]\"\n            >\n                {t(\"Edit\")}\n            </Button>\n        );\n    } else {\n        return (\n            <Button\n                intent={\"success\"}\n                onClick={() => {\n                    onSave();\n                }}\n                className=\"mt-5 w-[80%]\"\n            >\n                {t(\"Save\")}\n            </Button>\n        );\n    }\n\n    // if (isEdit)\n    //     return (\n    //         <Button\n    //             intent={\"success\"}\n    //             onClick={() => {\n    //                 setIsEdit(false);\n    //                 onSave();\n    //             }}\n    //             className=\"mt-5 w-[80%]\"\n    //         >\n    //             {t(\"Save\")}\n    //         </Button>\n    //     );\n    // else {\n    //     if (isDisabled)\n    //         return (\n    //             <Button\n    //                 intent={\"info\"}\n    //                 onClick={() => {\n    //                     setIsDisabled(false);\n    //                     setIsEdit(true);\n    //                 }}\n    //                 className=\"mt-5 w-[80%]\"\n    //             >\n    //                 {t(\"Edit\")}\n    //             </Button>\n    //         );\n    //     else\n    //         return (\n    //             <Button\n    //                 intent={\"success\"}\n    //                 onClick={() => onAdd()}\n    //                 className=\"mt-5 w-[80%]\"\n    //             >\n    //                 {t(\"Add\")}\n    //             </Button>\n    //         );\n    // }\n};\n\nexport default EntryEditorControls;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\n\n/**\n * @typedef {object} Props\n * @property {\"text\" | \"password\"} [type=\"text\"] - Input type.\n * @property {boolean} [disabled=false] - Whether the input is disabled.\n * @property {string} [className] - Additional classes to pass onto button.\n * @property {...any} [props] - Rest of the props.\n */\n\n/**\n * Simple input.\n *\n * @type {React.ForwardRefExoticComponent<React.PropsWithoutRef<Props> & React.RefAttributes<unknown>>}\n */\nconst Input = React.forwardRef(\n    ({ intent = \"\", type = \"text\", disabled = false, className, ...props }, ref) => {\n        const changeColor = () => {\n            switch (intent) {\n                case \"info\":\n                    return [\"border-b-cyan-300\",\n                        \"hover:border-cyan-500\"];\n                case \"warning\":\n                    return [\"border-b-orange-300\",\n                        \"hover:border-orange-500\"];\n                case \"danger\":\n                    return [\"border-b-red-300\",\n                        \"hover:border-red-500\"];\n                case \"success\":\n                    return [\"border-b-green-300\",\n                        \"hover:border-green-500\"];\n                default:\n                    return [\"border-b-gray-300\",\n                        \"hover:border-gray-500\"];\n            }\n        };\n        return (\n            <input\n                intent={intent}\n                ref={ref}\n                type={type}\n                disabled={disabled}\n                className={clsx(\n                    \"px-[1rem]\",\n                    \"py-[0.5rem]\",\n                    \"outline-none\",\n                    \"border-b\",\n                    \"rounded-[4px]\",\n                    \"ring-offset-0\",\n                    \"ring-gray-200\",\n                    \"hover:\",\n                    \"focus:outline-none\",\n                    \"focus:none\",\n                    \"disabled:border-opacity-60\",\n                    \"disabled:bg-gray-100\",\n                    \"disabled:bg-opacity-60\",\n                    \"disabled:placeholder-opacity-60\",\n                    \"disabled:text-gray-400\",\n                    \"disabled:text-opacity-60\",\n                    \"disabled:cursor-not-allowed\",\n                    className,\n                    changeColor()\n                )}\n                {...props}\n            />\n        );\n    }\n);\n\nInput.propTypes = {\n    type: PropTypes.oneOf([\"text\", \"password\"]),\n    disabled: PropTypes.bool,\n    className: PropTypes.string,\n    intent: PropTypes.oneOf([\"warning\", \"info\", \"success\", \"danger\"])\n};\n\nInput.displayName = \"Input\";\n\nexport default Input;\n","import React, { useRef } from \"react\";\nimport { Dialog } from \"@headlessui/react\";\nimport { PropTypes } from \"prop-types\";\nimport { useCallback, useState } from \"react\";\nimport { createContext } from \"react\";\nimport { CONFIRM_MODAL_ID } from \"./ConfirmModal\";\n\nlet MODAL_CONTENT = null;\n\nexport const ModalContext = createContext({});\n\nexport const ModalContextProvider = ({ children }) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const [title, setTitle] = useState(\"\");\n    let resolveRef = useRef(undefined);\n    const openModal = useCallback((title, content) => {\n        setTitle(title);\n        MODAL_CONTENT = content;\n        const promise = new Promise((resolve) => {\n            resolveRef.current = resolve;\n        });\n\n        setIsOpen(true);\n        return promise;\n    }, []);\n\n    const openConfirmModal = (title) => {\n        return openModal(title, CONFIRM_MODAL_ID);\n    };\n\n    const closeModal = useCallback((arg) => {\n        resolveRef.current(arg);\n        setIsOpen(false);\n    }, []);\n\n    return (\n        <ModalContext.Provider\n            value={{ closeModal, openModal, openConfirmModal }}\n        >\n            {children}\n            <Modal isOpen={isOpen} title={title} closeModal={closeModal} />\n        </ModalContext.Provider>\n    );\n};\n\nconst Modal = ({ isOpen, closeModal, title }) => {\n    return (\n        <Dialog\n            open={isOpen}\n            onClose={closeModal}\n            className=\"fixed z-10 inset-0 overflow-y-auto\"\n        >\n            <div className=\"flex items-center justify-center min-h-screen\">\n                <Dialog.Overlay className=\"fixed inset-0 bg-black opacity-30\" />\n\n                <div className=\"relative bg-white rounded-[8px] p-[8px] w-fit mx-auto\">\n                    <div className=\"flex flex-col justify-between\">\n                        <div className=\"flex flex-row justify-between items-center\">\n                            <Dialog.Title className=\"mr-4 text-slate-800 py-4 px-4 font-medium\">\n                                {title}\n                            </Dialog.Title>\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-6 w-6 hover:cursor-pointer ml-4\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                                onClick={closeModal}\n                            >\n                                <path\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    strokeWidth={2}\n                                    d=\"M6 18L18 6M6 6l12 12\"\n                                />\n                            </svg>\n                        </div>\n                        <div>{MODAL_CONTENT}</div>\n                    </div>\n                </div>\n            </div>\n        </Dialog>\n    );\n};\n\nModal.propTypes = {\n    isOpen: PropTypes.bool,\n    openModal: PropTypes.func,\n    closeModal: PropTypes.func,\n    title: PropTypes.string,\n    resolve: PropTypes.func,\n    reject: PropTypes.func,\n};\n\nModalContextProvider.propTypes = {\n    children: PropTypes.node,\n};\n\nexport default Modal;\n","import React, { useRef, useState } from \"react\";\nimport i18n from \"i18next\";\nimport { useTranslation } from \"react-i18next\";\nimport useModalHook from \"../hooks/useModalHook\";\nimport Button from \"./Button\";\n\nconst Settings = () => {\n    const { t } = useTranslation();\n    const [language, setLanguage] = useState(i18n.language); //language detector\n\n    const refSelect = useRef(null);\n\n    const onConfirmClick = () => {\n        i18n.changeLanguage(refSelect.current.value);\n        closeModal();\n    };\n\n    const { closeModal } = useModalHook();\n\n    return (\n        <div className=\"settings pb-6 pt-5 rounded-lg min-w-[200px] text-base\">\n            <select\n                value={language}\n                onChange={(e) => {\n                    setLanguage(e.target.value);\n                }}\n                ref={refSelect}\n                name=\"language\"\n                className=\"mb-12 w-full outline-none bg-gray-100 px-4\"\n            >\n                <option value=\"en\">{t(\"english\")}</option>\n                <option value=\"sr\">{t(\"serbian\")}</option>\n            </select>\n            <div className=\"flex justify-around\">\n                <Button onClick={onConfirmClick} intent=\"success\">\n                    {t(\"confirm\")}\n                </Button>\n                <Button onClick={closeModal} intent=\"danger\">\n                    {t(\"cancel\")}\n                </Button>\n            </div>\n        </div>\n    );\n};\n\nexport default Settings;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TableHeader from \"./TableHeader\";\nimport TableBody from \"./TableBody\";\n\nconst Table = ({ columns, items = [] }) => {\n    return (\n        <div className={\"sm:px-6 mt-6 \"}>\n            <table className=\" border-collapse w-full min-w-full divide-y divide-gray-200\">\n                <TableHeader columns={columns} />\n                <TableBody columns={columns} items={items} />\n            </table>\n        </div>\n    );\n};\n\nTable.propTypes = {\n    columns: PropTypes.array,\n    items: PropTypes.array,\n};\nexport default Table;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TableBody = ({ items, columns }) => {\n    return (\n        <tbody className={\"bg-white divide-y divide-gray-200\"}>\n            {items.map((item) => {\n                return (\n                    <tr key={item.uuid}>\n                        {columns.map((column) => {\n                            return (\n                                <td\n                                    className={column.bodyClassName}\n                                    key={column.label}\n                                >\n                                    {column.renderCell(item)}\n                                </td>\n                            );\n                        })}\n                    </tr>\n                );\n            })}\n        </tbody>\n    );\n};\n\nTableBody.propTypes = {\n    columns: PropTypes.array,\n    items: PropTypes.array,\n};\nexport default TableBody;\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport PropTypes from \"prop-types\";\n\nconst TableHeader = ({ columns }) => {\n    const { t } = useTranslation();\n\n    return (\n        <thead className={\"bg-gray-100\"}>\n            <tr>\n                {columns.map((column) => {\n                    return (\n                        <th\n                            key={column.label}\n                            className={column.headerClassName}\n                        >\n                            {t(column.label)}\n                        </th>\n                    );\n                })}\n            </tr>\n        </thead>\n    );\n};\n\nTableHeader.propTypes = {\n    columns: PropTypes.array,\n};\n\nexport default TableHeader;\n","import { useState, useCallback, useMemo } from \"react\";\n\nexport const GET_RESPONSE_DATA_JSON = async (response) => response.json();\nexport const GET_RESPONSE_DATA_BLOB = async (response) => response.blob();\nexport const GET_RESPONSE_DATA_TEXT = async (response) => response.text();\nexport const GET_RESPONSE_DATA_FORM_DATA = async (response) =>\n    response.formData();\n\nconst useFetch = (url, init = null, getResponseData = undefined) => {\n    const [response, setResponse] = useState(null);\n    const [data, setData] = useState(null);\n    const [error, setError] = useState(null);\n    const [isFetching, setIsFetching] = useState(false);\n\n    const fetch = useCallback(\n        async (query = \"\") => {\n            try {\n                setError(null);\n                setResponse(null);\n                setIsFetching(true);\n\n                // start fetching\n                const response = await window.fetch(url + query, init);\n                // console.log(response);\n\n                // check if response is ok\n                if (!response.ok) {\n                    throw new Error({\n                        status: response.status,\n                        message: response.statusText,\n                    });\n                }\n\n                setResponse(response);\n                // if(getResponseData){\n                // setData(await getResponseData(response))\n                // }\n\n                if (getResponseData) {\n                    const getData = await getResponseData(response);\n                    setData(getData);\n                }\n            } catch (error) {\n                // catches errors\n                console.log(error);\n                setError(error);\n            } finally {\n                setIsFetching(false);\n            }\n        },\n        [url, init, getResponseData]\n    );\n\n    return { response, data, error, isFetching, fetch };\n};\n\nexport const useFetchGet = (url, init, getResponseData) => {\n    const initObject = useMemo(() => {\n        const checkedInit = init && typeof init !== \"function\" ? init : {};\n        return { ...checkedInit, method: \"GET\" };\n    }, [init]);\n\n    if (typeof init === \"function\") {\n        getResponseData = init;\n    }\n\n    return useFetch(url, initObject, getResponseData);\n};\n\nexport const useFetchPost = (url, init, getResponseData) => {\n    const initObject = useMemo(() => {\n        const checkedInit = init && typeof init !== \"function\" ? init : {};\n        return { ...checkedInit, method: \"POST\" };\n    }, [init]);\n\n    if (typeof init === \"function\") {\n        getResponseData = init;\n    }\n\n    return useFetch(url, initObject, getResponseData);\n};\n\nexport const useFetchPut = (url, init, getResponseData) => {\n    const initObject = useMemo(() => {\n        const checkedInit = init && typeof init !== \"function\" ? init : {};\n        return { ...checkedInit, method: \"PUT\" };\n    }, [init]);\n\n    if (typeof init === \"function\") {\n        getResponseData = init;\n    }\n    return useFetch(url, initObject, getResponseData);\n};\n\nexport const useFetchDelete = (url, init, getResponseData) => {\n    const initObject = useMemo(() => {\n        const checkedInit = init && typeof init !== \"function\" ? init : {};\n        return { ...checkedInit, method: \"DELETE\" };\n    }, [init]);\n\n    if (typeof init === \"function\") {\n        getResponseData = init;\n    }\n    return useFetch(url, initObject, getResponseData);\n};\n","import { ModalContext } from \"../components/Modal\";\nimport { useContext } from \"react\";\n\nconst useModalHook = () => {\n    return useContext(ModalContext);\n};\n\nexport default useModalHook;\n","import React, { StrictMode } from \"react\";\nimport ReactDom from \"react-dom\";\nimport App from \"./App\";\nimport { ModalContextProvider } from \"../app/components/Modal\";\n\nReactDom.render(\n    <StrictMode>\n        <ModalContextProvider>\n            <App />\n        </ModalContextProvider>\n    </StrictMode>,\n    document.getElementById(\"app-root\")\n);\n","const INDEX_ROUTE = \"/\";\n\nconst API_ROUTE = `${INDEX_ROUTE}api`;\nconst API_GET_ENTRIES_ROUTE = `${API_ROUTE}/entries`;\nconst API_GET_ENTRY_ROUTE = `${API_GET_ENTRIES_ROUTE}/:uuid`;\n\nconst API_POST_ENTRY_ROUTE = `${API_ROUTE}/entries`;\nconst API_POST_V2_ENTRY_ROUTE = `${API_ROUTE}/v2/entries`;\nconst API_PUT_ENTRY_ROUTE = `${API_ROUTE}/entries/:uuid`;\nconst API_PUT_V2_ENTRY_ROUTE = `${API_ROUTE}/v2/entries/:uuid`;\nconst API_DELETE_ENTRY_ROUTE = `${API_ROUTE}/entries/:uuid`;\n\nconst API_GET_ANIMALS_ROUTE = `${API_ROUTE}/animals`;\n\nconst API = {\n    INDEX_ROUTE: INDEX_ROUTE,\n    API_ROUTE: API_ROUTE,\n    API_GET_ENTRIES_ROUTE: API_GET_ENTRIES_ROUTE,\n    API_GET_ENTRY_ROUTE: API_GET_ENTRY_ROUTE,\n    API_POST_ENTRY_ROUTE: API_POST_ENTRY_ROUTE,\n    API_POST_V2_ENTRY_ROUTE: API_POST_V2_ENTRY_ROUTE,\n    API_PUT_ENTRY_ROUTE: API_PUT_ENTRY_ROUTE,\n    API_PUT_V2_ENTRY_ROUTE: API_PUT_V2_ENTRY_ROUTE,\n    API_DELETE_ENTRY_ROUTE: API_DELETE_ENTRY_ROUTE,\n    API_GET_ANIMALS_ROUTE: API_GET_ANIMALS_ROUTE,\n};\n\nmodule.exports = API;\n"],"names":[],"sourceRoot":""}